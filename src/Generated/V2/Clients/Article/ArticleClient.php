<?php

namespace Mittwald\ApiClient\Generated\V2\Clients\Article;

use GuzzleHttp\Client;
use GuzzleHttp\Exception\GuzzleException;
use GuzzleHttp\Psr7\Request;
use Mittwald\ApiClient\Generated\V2\Clients\Article\GetArticle\GetArticle200Response;
use Mittwald\ApiClient\Generated\V2\Clients\Article\GetArticle\GetArticle404Response;
use Mittwald\ApiClient\Generated\V2\Clients\Article\GetArticle\GetArticleDefaultResponse;
use Mittwald\ApiClient\Generated\V2\Clients\Article\GetArticle\GetArticleRequest;
use Mittwald\ApiClient\Generated\V2\Clients\Article\ListArticles\ListArticles200Response;
use Mittwald\ApiClient\Generated\V2\Clients\Article\ListArticles\ListArticlesDefaultResponse;
use Mittwald\ApiClient\Generated\V2\Clients\Article\ListArticles\ListArticlesRequest;

/**
 * Client for Article API
 *
 * The article API allows you to read article information.
 *
 * DO NOT EDIT; this class was generated by the mittwald/api-client-builder package
 * (https://github.com/mittwald/api-client-php-builder). Please make any changes
 * there.
 *
 * @generated
 * @see https://github.com/mittwald/api-client-php-builder
 */
class ArticleClient
{
    private Client $client;

    public function __construct(Client $client)
    {
        $this->client = $client;
    }

    /**
     * Get an Article.
     *
     * @see https://developer.mittwald.de/reference/v2/#tag/Article/operation/article-get-article
     * @throws GuzzleException
     * @param GetArticle\GetArticleRequest $request An object representing the request for this operation
     * @return GetArticle\GetArticle200Response|GetArticle\GetArticle404Response|GetArticle\GetArticleDefaultResponse The Article object
     */
    public function getArticle(GetArticleRequest $request): GetArticle200Response|GetArticle404Response|GetArticleDefaultResponse
    {
        $httpRequest = new Request(GetArticleRequest::method, $request->getUrl());
        $httpResponse = $this->client->send($httpRequest, [
            'query' => $request->getQuery(),
            'headers' => $request->getHeaders(),
        ]);
        return match ($httpResponse->getStatusCode()) {
            200 => GetArticle200Response::fromResponse($httpResponse),
            404 => GetArticle404Response::fromResponse($httpResponse),
            default => GetArticleDefaultResponse::fromResponse($httpResponse),
        };
    }

    /**
     * List Articles.
     *
     * @see https://developer.mittwald.de/reference/v2/#tag/Article/operation/article-list-articles
     * @throws GuzzleException
     * @param ListArticles\ListArticlesRequest $request An object representing the request for this operation
     * @return ListArticles\ListArticles200Response|ListArticles\ListArticlesDefaultResponse Object containing the list of Articles
     */
    public function listArticles(ListArticlesRequest $request): ListArticles200Response|ListArticlesDefaultResponse
    {
        $httpRequest = new Request(ListArticlesRequest::method, $request->getUrl());
        $httpResponse = $this->client->send($httpRequest, [
            'query' => $request->getQuery(),
            'headers' => $request->getHeaders(),
        ]);
        return match ($httpResponse->getStatusCode()) {
            200 => ListArticles200Response::fromResponse($httpResponse),
            default => ListArticlesDefaultResponse::fromResponse($httpResponse),
        };
    }
}
