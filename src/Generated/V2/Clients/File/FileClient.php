<?php

namespace Mittwald\ApiClient\Generated\V2\Clients\File;

use GuzzleHttp\Client;
use GuzzleHttp\Exception\GuzzleException;
use GuzzleHttp\Psr7\Request;
use Mittwald\ApiClient\Client\StringResponse;
use Mittwald\ApiClient\Generated\V2\Clients\File\CreateFile\CreateFile201Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\CreateFile\CreateFile400Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\CreateFile\CreateFile500Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\CreateFile\CreateFileDefaultResponse;
use Mittwald\ApiClient\Generated\V2\Clients\File\CreateFile\CreateFileRequest;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFile\GetFile400Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFile\GetFile404Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFile\GetFile500Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFile\GetFileDefaultResponse;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFile\GetFileRequest;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileMeta\GetFileMeta200Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileMeta\GetFileMeta404Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileMeta\GetFileMetaDefaultResponse;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileMeta\GetFileMetaRequest;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTokenRules\GetFileTokenRules200Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTokenRules\GetFileTokenRules404Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTokenRules\GetFileTokenRules500Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTokenRules\GetFileTokenRulesDefaultResponse;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTokenRules\GetFileTokenRulesRequest;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTypeRules\GetFileTypeRules200Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTypeRules\GetFileTypeRules404Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTypeRules\GetFileTypeRules500Response;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTypeRules\GetFileTypeRulesDefaultResponse;
use Mittwald\ApiClient\Generated\V2\Clients\File\GetFileTypeRules\GetFileTypeRulesRequest;

/**
 * Client for File API
 *
 * The file API allows you to manage your files, for example for conversations
 * attachments and avatar uploads.
 *
 * DO NOT EDIT; this class was generated by the mittwald/api-client-builder package
 * (https://github.com/mittwald/api-client-php-builder). Please make any changes
 * there.
 *
 * @generated
 * @see https://github.com/mittwald/api-client-php-builder
 */
class FileClient
{
    private Client $client;

    public function __construct(Client $client)
    {
        $this->client = $client;
    }

    /**
     * Create a File.
     *
     * @see https://developer.mittwald.de/reference/v2/#tag/File/operation/file-create-file
     * @throws GuzzleException
     * @param CreateFile\CreateFileRequest $request An object representing the request for this operation
     * @return CreateFile\CreateFile201Response|CreateFile\CreateFile400Response|CreateFile\CreateFile500Response|CreateFile\CreateFileDefaultResponse Created
     */
    public function createFile(CreateFileRequest $request): CreateFile201Response|CreateFile400Response|CreateFile500Response|CreateFileDefaultResponse
    {
        $httpRequest = new Request(CreateFileRequest::method, $request->getUrl());
        $httpResponse = $this->client->send($httpRequest, [
            'query' => $request->getQuery(),
            'headers' => $request->getHeaders(),
        ]);
        return match ($httpResponse->getStatusCode()) {
            201 => CreateFile201Response::fromResponse($httpResponse),
            400 => CreateFile400Response::fromResponse($httpResponse),
            500 => CreateFile500Response::fromResponse($httpResponse),
            default => CreateFileDefaultResponse::fromResponse($httpResponse),
        };
    }

    /**
     * Get a File's meta.
     *
     * @see https://developer.mittwald.de/reference/v2/#tag/File/operation/file-get-file-meta
     * @throws GuzzleException
     * @param GetFileMeta\GetFileMetaRequest $request An object representing the request for this operation
     * @return GetFileMeta\GetFileMeta200Response|GetFileMeta\GetFileMeta404Response|GetFileMeta\GetFileMetaDefaultResponse OK
     */
    public function getFileMeta(GetFileMetaRequest $request): GetFileMeta200Response|GetFileMeta404Response|GetFileMetaDefaultResponse
    {
        $httpRequest = new Request(GetFileMetaRequest::method, $request->getUrl());
        $httpResponse = $this->client->send($httpRequest, [
            'query' => $request->getQuery(),
            'headers' => $request->getHeaders(),
        ]);
        return match ($httpResponse->getStatusCode()) {
            200 => GetFileMeta200Response::fromResponse($httpResponse),
            404 => GetFileMeta404Response::fromResponse($httpResponse),
            default => GetFileMetaDefaultResponse::fromResponse($httpResponse),
        };
    }

    /**
     * Get a Token's upload rules.
     *
     * @see https://developer.mittwald.de/reference/v2/#tag/File/operation/file-get-file-token-rules
     * @throws GuzzleException
     * @param GetFileTokenRules\GetFileTokenRulesRequest $request An object representing the request for this operation
     * @return GetFileTokenRules\GetFileTokenRules200Response|GetFileTokenRules\GetFileTokenRules404Response|GetFileTokenRules\GetFileTokenRules500Response|GetFileTokenRules\GetFileTokenRulesDefaultResponse OK
     */
    public function getFileTokenRules(GetFileTokenRulesRequest $request): GetFileTokenRules200Response|GetFileTokenRules404Response|GetFileTokenRules500Response|GetFileTokenRulesDefaultResponse
    {
        $httpRequest = new Request(GetFileTokenRulesRequest::method, $request->getUrl());
        $httpResponse = $this->client->send($httpRequest, [
            'query' => $request->getQuery(),
            'headers' => $request->getHeaders(),
        ]);
        return match ($httpResponse->getStatusCode()) {
            200 => GetFileTokenRules200Response::fromResponse($httpResponse),
            404 => GetFileTokenRules404Response::fromResponse($httpResponse),
            500 => GetFileTokenRules500Response::fromResponse($httpResponse),
            default => GetFileTokenRulesDefaultResponse::fromResponse($httpResponse),
        };
    }

    /**
     * Get a Type's upload rules.
     *
     * @see https://developer.mittwald.de/reference/v2/#tag/File/operation/file-get-file-type-rules
     * @throws GuzzleException
     * @param GetFileTypeRules\GetFileTypeRulesRequest $request An object representing the request for this operation
     * @return GetFileTypeRules\GetFileTypeRules200Response|GetFileTypeRules\GetFileTypeRules404Response|GetFileTypeRules\GetFileTypeRules500Response|GetFileTypeRules\GetFileTypeRulesDefaultResponse OK
     */
    public function getFileTypeRules(GetFileTypeRulesRequest $request): GetFileTypeRules200Response|GetFileTypeRules404Response|GetFileTypeRules500Response|GetFileTypeRulesDefaultResponse
    {
        $httpRequest = new Request(GetFileTypeRulesRequest::method, $request->getUrl());
        $httpResponse = $this->client->send($httpRequest, [
            'query' => $request->getQuery(),
            'headers' => $request->getHeaders(),
        ]);
        return match ($httpResponse->getStatusCode()) {
            200 => GetFileTypeRules200Response::fromResponse($httpResponse),
            404 => GetFileTypeRules404Response::fromResponse($httpResponse),
            500 => GetFileTypeRules500Response::fromResponse($httpResponse),
            default => GetFileTypeRulesDefaultResponse::fromResponse($httpResponse),
        };
    }

    /**
     * Get a File.
     *
     * @see https://developer.mittwald.de/reference/v2/#tag/File/operation/file-get-file
     * @throws GuzzleException
     * @param GetFile\GetFileRequest $request An object representing the request for this operation
     * @return StringResponse|GetFile\GetFile400Response|GetFile\GetFile404Response|GetFile\GetFile500Response|GetFile\GetFileDefaultResponse OK
     */
    public function getFile(GetFileRequest $request): StringResponse|GetFile400Response|GetFile404Response|GetFile500Response|GetFileDefaultResponse
    {
        $httpRequest = new Request(GetFileRequest::method, $request->getUrl());
        $httpResponse = $this->client->send($httpRequest, [
            'query' => $request->getQuery(),
            'headers' => $request->getHeaders(),
        ]);
        return match ($httpResponse->getStatusCode()) {
            200 => StringResponse::fromResponse($httpResponse),
            400 => GetFile400Response::fromResponse($httpResponse),
            404 => GetFile404Response::fromResponse($httpResponse),
            500 => GetFile500Response::fromResponse($httpResponse),
            default => GetFileDefaultResponse::fromResponse($httpResponse),
        };
    }
}
