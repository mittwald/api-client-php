<?php

declare(strict_types=1);

namespace Mittwald\ApiClient\Generated\V2\Schemas\Mailmigration;

use InvalidArgumentException;
use JsonSchema\Validator;

/**
 * Auto-generated class for
 * de.mittwald.v1.mailmigration.MigrationMailAddressMigrationJobMigrate.
 *
 * DO NOT EDIT; this class was generated by the mittwald/api-client-builder package
 * (https://github.com/mittwald/api-client-php-builder). Please make any changes
 * there.
 *
 * @generated
 * @see https://github.com/mittwald/api-client-php-builder
 */
class MigrationMailAddressMigrationJobMigrate
{
    /**
     * Schema used to validate input for creating instances of this class
     */
    private static array $schema = [
        'properties' => [
            'requirements' => [
                '$ref' => '#/components/schemas/de.mittwald.v1.mailmigration.MigrateMailAddressCommandRequirements',
            ],
        ],
        'required' => [
            'requirements',
        ],
        'type' => 'object',
    ];

    private MigrateMailAddressCommandRequirements $requirements;

    public function __construct(MigrateMailAddressCommandRequirements $requirements)
    {
        $this->requirements = $requirements;
    }

    /**
     * @return
     * MigrateMailAddressCommandRequirements
     */
    public function getRequirements(): MigrateMailAddressCommandRequirements
    {
        return $this->requirements;
    }

    public function withRequirements(MigrateMailAddressCommandRequirements $requirements): self
    {
        $clone = clone $this;
        $clone->requirements = $requirements;

        return $clone;
    }

    /**
     * Builds a new instance from an input array
     *
     * @param array|object $input Input data
     * @param bool $validate Set this to false to skip validation; use at own risk
     * @return MigrationMailAddressMigrationJobMigrate Created instance
     * @throws InvalidArgumentException
     */
    public static function buildFromInput(array|object $input, bool $validate = true): MigrationMailAddressMigrationJobMigrate
    {
        $input = is_array($input) ? Validator::arrayToObjectRecursive($input) : $input;
        if ($validate) {
            static::validateInput($input);
        }

        $requirements = MigrateMailAddressCommandRequirements::buildFromInput($input->{'requirements'}, validate: $validate);

        $obj = new self($requirements);

        return $obj;
    }

    /**
     * Converts this object back to a simple array that can be JSON-serialized
     *
     * @return array Converted array
     */
    public function toJson(): array
    {
        $output = [];
        $output['requirements'] = $this->requirements->toJson();

        return $output;
    }

    /**
     * Validates an input array
     *
     * @param array|object $input Input data
     * @param bool $return Return instead of throwing errors
     * @return bool Validation result
     * @throws InvalidArgumentException
     */
    public static function validateInput(array|object $input, bool $return = false): bool
    {
        $validator = new Validator();
        $input = is_array($input) ? Validator::arrayToObjectRecursive($input) : $input;
        $validator->validate($input, static::$schema);

        if (!$validator->isValid() && !$return) {
            $errors = array_map(function (array $e): string {
                return $e["property"] . ": " . $e["message"];
            }, $validator->getErrors());
            throw new InvalidArgumentException(join(", ", $errors));
        }

        return $validator->isValid();
    }

    public function __clone()
    {
    }
}
